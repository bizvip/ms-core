<?php
/******************************************************************************
 * Copyright (c) 2024. Archer++. All rights reserved.                         *
 * Author ORCID: https://orcid.org/0009-0003-8150-367X                        *
 ******************************************************************************/

declare(strict_types=1);

namespace {NAMESPACE};

{USE}
use Hyperf\Database\Model\Builder;
use Mine\Abstracts\AbstractMapper;

/**
 * {COMMENT}
 */
final class {CLASS_NAME} extends AbstractMapper
{
    /**
     * @var {MODEL}
     */
    public $model;

    public function assignModel(): void
    {
        $this->model = {MODEL}::class;
    }

    /**
     * 获取前端选择树
     */
    public function getSelectTree(): array
    {
        return $this->model::query()
            ->select(['{FIELD_ID}', '{FIELD_PID}', '{FIELD_ID} AS value', '{FIELD_NAME} AS label'])
            ->get()->toTree();
    }


    /**
     * 查询树名称
     */
    public function getTreeName(array $ids = null): array
    {
        return $this->model::withTrashed()->whereIn('{FIELD_ID}', $ids)->pluck('{FIELD_NAME}')->toArray();
    }

    public function checkChildrenExists(int $id): bool
    {
        return $this->model::withTrashed()->where('{FIELD_PID}', $id)->exists();
    }

    /**
     * 搜索处理器
     */
    public function handleSearch(Builder $query, array $params): Builder
    {
        {SEARCH}
        return $query;
    }
}